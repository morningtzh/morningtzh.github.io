<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>游戏开发 | 瑟瑟和你说早安</title>
    <link>https://blog.morningtzh.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91.html</link>
      <atom:link href="https://blog.morningtzh.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <description>游戏开发</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>zh-Hans</language><copyright>©MorningTZH</copyright><lastBuildDate>Sat, 24 Oct 2020 11:11:56 +0800</lastBuildDate>
    <image>
      <url>https://blog.morningtzh.com/images/logo_hu56606b72eae1823e5af44004a0b07113_957806_300x300_fit_lanczos_2.png</url>
      <title>游戏开发</title>
      <link>https://blog.morningtzh.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91.html</link>
    </image>
    
    <item>
      <title>【Unity是个好游戏】随机地形生成</title>
      <link>https://blog.morningtzh.com/post/unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F%E9%9A%8F%E6%9C%BA%E5%9C%B0%E5%BD%A2%E7%94%9F%E6%88%90.html</link>
      <pubDate>Sat, 24 Oct 2020 11:11:56 +0800</pubDate>
      <guid>https://blog.morningtzh.com/post/unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F%E9%9A%8F%E6%9C%BA%E5%9C%B0%E5%BD%A2%E7%94%9F%E6%88%90.html</guid>
      <description>&lt;h1 id=&#34;unity是个好游戏随机地形生成&#34;&gt;【Unity是个好游戏】随机地形生成&lt;/h1&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#前文提要&#34;&gt;前文提要&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#1高度图&#34;&gt;1.高度图&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#2高度图随机生成&#34;&gt;2.高度图随机生成&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#3地块生成&#34;&gt;3.地块生成&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#4结果预览&#34;&gt;4.结果预览&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h2 id=&#34;前文提要&#34;&gt;前文提要&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;./unity%e6%98%af%e4%b8%aa%e5%a5%bd%e6%b8%b8%e6%88%8f%e6%88%91%e6%83%b3%e7%8e%a9%e4%bb%80%e4%b9%88.html&#34;&gt;【Unity是个好游戏】我想玩什么&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1高度图&#34;&gt;1.高度图&lt;/h2&gt;
&lt;p&gt;首先我们需要了解地形数据的表示方法。一般我们会用高度图来表示，高度图即一张每个像素点为高度的 bitmap。可以看到下面这张图是全球的高度图，他的位深为 8bit。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/15/Srtm_ramp2.world.21600x10800.jpg/1920px-Srtm_ramp2.world.21600x10800.jpg&#34; alt=&#34;Heightmap of Earth&amp;rsquo;s surface&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果有兴趣可以从 
&lt;a href=&#34;https://en.wikipedia.org/wiki/File:Srtm_ramp2.world.21600x10800.jpg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wikipedia&lt;/a&gt; 上下载原图，$21600*10800$ 大小的高度图仅 5.89M。对于这么大一张 Heightmap，我们是无法直接用的，需要对他进行切割，分块加载。每个像素点之间的距离是&lt;/p&gt;
&lt;p&gt;本次随机地形生成，高度图也会随机生成出来使用，当然随机生成的小模块也能替换为加载已有地形。&lt;/p&gt;
&lt;p&gt;高度图的渲染效果，下图为生成的 mesh：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png&#34; alt=&#34;Heightmap&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/2/2f/Heightmap_rendered.png&#34; alt=&#34;Heightmap&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2高度图随机生成&#34;&gt;2.高度图随机生成&lt;/h2&gt;
&lt;p&gt;随机生成在一般的单值用法里，各个语言的Random库就有很好的支持。但对于地形图，他需要一个在2D 平面上连续的值。最简单的我们可以通过 $h=x+y$ 来遍历像素点生成高度图，这样简单地函数有利于我们在地形区块拼接不上时快速找到问题，当然也可以换成更单调的$h = x$ 或$h = y$ 来查看两轴上的拼接问题。&lt;/p&gt;
&lt;p&gt;在 Minecraft 地图采用 
&lt;a href=&#34;https://zh.wikipedia.org/wiki/Perlin%e5%99%aa%e5%a3%b0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Perlin 噪声&lt;/a&gt; 生成。他会生成类似于以下的图像：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/5/54/SimplexNoise2D.png&#34; alt=&#34;Perlin Noise&#34;&gt;&lt;/p&gt;
&lt;p&gt;将此图渲染成 mesh 就能得到我们想要的随机地形。&lt;/p&gt;
&lt;p&gt;Perlin 噪声较为连续，单一使用它会导致地形过于贫乏，因此在实际生成时会多层噪声叠加。&lt;/p&gt;
&lt;p&gt;接下来讲解的图来源于YouTube 大佬的地图生成教程 —— 
&lt;a href=&#34;https://www.youtube.com/watch?v=wbpMiKiSKm8&amp;amp;list=PLFt_AvWsXl0eBW2EiBtl_sxmDtSgZBxB3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Procedural Terrain Generation&lt;/a&gt; 。这里简单的采用三层噪声进行讲解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大地形：通过对噪声密集采样，获取较为平缓的波形；&lt;/li&gt;
&lt;li&gt;巨石：通过对噪声的中等密度采样，获取一般的波形；&lt;/li&gt;
&lt;li&gt;小石块：通过对噪声的大跨度采样，获取波动幅度最剧烈的波形；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最终将这三个波形进行叠加，就是一个不再单调的波形了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F.assets/PerlinNoise1.png&#34; alt=&#34;PerlinNoise1&#34;&gt;&lt;/p&gt;
&lt;p&gt;同时对这三种波形振幅进行一个加权，减少小石块对大地形的影响，就能得到一个比较合适的地形。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F.assets/PerlinNoise2.png&#34; alt=&#34;PerlinNoise2&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个教程我没看完，review 了他最终的代码，大致理解他生成地形的方法。这个教程中自建 mesh 创造地形，比我使用 Unity3D 自带的 Terrain 更为复杂和底层。&lt;/p&gt;
&lt;h2 id=&#34;3地块生成&#34;&gt;3.地块生成&lt;/h2&gt;
&lt;p&gt;上图的波形其实也挺单调的，我并不想跑了一个小时之后还是类似的地形，因此需要作出一些差别。&lt;/p&gt;
&lt;p&gt;我们会发现在现实世界中其实是有地块划分的，平原、高原、丘陵等等。我们在游戏里也自然可以划分地块，对于不同的地块配置不同的地形参数。在划分地块的时候我们需要用到另外一个噪声—— 
&lt;a href=&#34;https://en.wikipedia.org/wiki/Worley_noise&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Worley noise&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;这种噪声会形成类似昆虫翅膀、细胞壁等形状。同时也广泛用于水波生成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/0/00/Worley.jpg&#34; alt=&#34;WorleyNoise&#34;&gt;&lt;/p&gt;
&lt;p&gt;对这种噪声的转换，可以生成我想要的地块划分。以下使用
&lt;a href=&#34;https://github.com/Auburn/FastNoise&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;FastNoise&lt;/a&gt;生成~&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F.assets/FastNoise.png&#34; alt=&#34;地块划分&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;4结果预览&#34;&gt;4.结果预览&lt;/h2&gt;
&lt;p&gt;后续的代码，将会融合以上的地形生成和地块生成。最终在不同区域上的地形差距可以非常大。可以看到带湖泊的平原后面是多重的高山，在这张图中间的山上有一处小 bug，会在后续详细介绍。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F.assets/%E5%9C%B0%E5%BD%A2%E5%9C%B0%E5%9D%97over.jpeg&#34; alt=&#34;中秋快乐&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【Unity是个好游戏】我想玩什么</title>
      <link>https://blog.morningtzh.com/post/unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F%E6%88%91%E6%83%B3%E7%8E%A9%E4%BB%80%E4%B9%88.html</link>
      <pubDate>Sat, 24 Oct 2020 09:17:44 +0800</pubDate>
      <guid>https://blog.morningtzh.com/post/unity%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%B8%B8%E6%88%8F%E6%88%91%E6%83%B3%E7%8E%A9%E4%BB%80%E4%B9%88.html</guid>
      <description>&lt;h1 id=&#34;unity是个好游戏我想玩什么&#34;&gt;【Unity是个好游戏】我想玩什么&lt;/h1&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2&gt;目录&lt;/h2&gt;
&lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&#34;#之前玩了什么&#34;&gt;之前玩了什么&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#那这次玩什么&#34;&gt;那这次玩什么&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#选型&#34;&gt;选型&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/nav&gt;
&lt;h2 id=&#34;之前玩了什么&#34;&gt;之前玩了什么&lt;/h2&gt;
&lt;p&gt;游戏制作，是一个一直想尝试的领域，毕业后几年一直有阶段性的尝试。&lt;/p&gt;
&lt;p&gt;刚毕业的时候比较喜欢 python。网上搜了 python 的游戏引擎，发现有pycocos2d、pygame，就选择了 pycocos2d 作为入门。这是最古老的 cocos2d 版本，基于pyglet，估计很少有人知道 cocos2d 最早竟然是仅支持 python 的。基于 pycocos2d，我用做了一个小场景，是一个小幽灵被一群大幽灵群殴。当时是用冒险岛素材做的，我小时候很喜欢冒险岛。由于当时编码能力非常弱鸡，理解能力也不足，后面就没继续了。&lt;/p&gt;
&lt;!-- 
![冒险岛场景截图](./Unity是个好游戏.assets/Map.png) --&gt;
&lt;video id=&#34;video&#34; width=100% controls autoplay preload=&#34;none&#34;&gt;
    &lt;source id=&#34;mp4&#34; src=&#34;./Unity是个好游戏.assets/冒险岛场景视频.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;p&gt;后面大概是两年之后了，玩着 Minecraft，突然想自己实现一下。那就先做个 2D 的吧，当时Cocos Creator是主推编辑器，正好那时候做 blog 用了 javascript，技术栈可以匹配，兄弟们用它！&lt;/p&gt;
&lt;p&gt;试图实现Minecraft 上的方块地图，用了四叉树和大量方块来做地图。从一开始的卡死到后面四叉树碰撞体融合，这次的游戏制作使用了柏林噪声生成二维地图。&lt;/p&gt;
&lt;video id=&#34;video&#34; controls autoplay preload=&#34;none&#34;&gt;
    &lt;source id=&#34;mp4&#34; src=&#34;./Unity是个好游戏.assets/cocos随机地图.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
&lt;h2 id=&#34;那这次玩什么&#34;&gt;那这次玩什么&lt;/h2&gt;
&lt;p&gt;这次又是一个两年后，得益于现工作认识了游戏开发大佬——在大学的时候就已经上线过一款游戏了，又燃起了游戏之魂。&lt;/p&gt;
&lt;p&gt;我玩游戏应该归在休闲党的行列。高中每周鲜有的游戏时间，大多数被我浪费在暴风城里，开着公会频道闲聊；在玩众多单机游戏时，我是挂逼，找不到挂就尝试修改存档；Minecraft 里面造造房子，飞到天上看看风景。&lt;/p&gt;
&lt;p&gt;所以这次玩什么？首先是他能给我带来什么。我期望的是一个开放自由的世界，有很多地方可供游览。&lt;/p&gt;
&lt;p&gt;游戏的丰富性至关重要，但我同样无法耗费大量时间来写剧本，另一方面自己写的剧本自己玩起来也缺乏新意。那丰富性只能通过随机值来获取了。&lt;/p&gt;
&lt;p&gt;这次玩的应该是一个随机世界，或者是一个RogueLike 游戏。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丰富的地形&lt;/li&gt;
&lt;li&gt;建造系统&lt;/li&gt;
&lt;li&gt;基础 RPG 系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然自己玩的乐趣主要在于游戏开发，游戏内的乐趣需要在开发的过程中慢慢丰富。从第三人的角度看起来，做出来的游戏一定会非常乏味。&lt;/p&gt;
&lt;h2 id=&#34;选型&#34;&gt;选型&lt;/h2&gt;
&lt;p&gt;在尝试过 cocos 系列的平台后，期望尝试一下3D 类型的游戏，这在制作过程中将会有更丰富体验。Unreal对我来说会太过沉重，同时我也没有很好的设备来支撑 Unreal 的开发。因此这次选择了 Unity3D 作为制作平台，抛开中国区的恶心运营来说，他是一个入门好平台。&lt;/p&gt;
&lt;p&gt;在 Unity3D 中，有一个自带的地形模块 Terrain，可以在上面方便的做出各种想要的地形。在初期的开发中也会主要围绕 Terrain 进行地形生成的开发。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
